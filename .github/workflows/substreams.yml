name: Substreams Contract Reviewer

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  # First job: Process contracts and commit results
  process-contracts:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for pushing to the repository
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Run Python script to generate contract data
        run: |
          # Run the Python script to generate mock contract data
          # In a real implementation, this would use the Substreams CLI
          python process_contracts.py
      
      - name: Create timestamp
        id: timestamp
        run: echo "date=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
      
      - name: Commit and push results
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # Create results directory if it doesn't exist
          mkdir -p results
          
          # Copy output to results directory with timestamp
          cp ./output/contracts.json ./results/contracts_${{ steps.timestamp.outputs.date }}.json
          
          # Add and commit
          git add ./results/
          git commit -m "Add contract data for ${{ steps.timestamp.outputs.date }}" || echo "No changes to commit"
          # Determine which branch we're on
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [ "$BRANCH" = "HEAD" ]; then
            # We're in detached HEAD state, use the default branch
            BRANCH="main"
          fi
          
          git push origin $BRANCH

  # Second job: Deploy dashboard to GitHub Pages
  deploy-dashboard:
    needs: process-contracts
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    # Allow only one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main  # Ensure we're using the main branch with the latest data
      
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Build dashboard
        run: |
          # Create a directory for the GitHub Pages site
          mkdir -p _site
          
          # Copy the dashboard files
          cp -r dashboard/* _site/
          
          # Copy the latest analysis for the dashboard to use
          mkdir -p _site/results
          cp results/latest_analysis.json _site/results/ || echo "No analysis file found, dashboard may not display data correctly"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '_site'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
