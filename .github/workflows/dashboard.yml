name: Deploy Dashboard

on:
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Substreams CLI
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          
          # Download the Substreams CLI binary directly
          SUBSTREAMS_VERSION="v1.1.11"
          wget -q "https://github.com/streamingfast/substreams/releases/download/${SUBSTREAMS_VERSION}/substreams_linux_x86_64.tar.gz"
          tar -xzf "substreams_linux_x86_64.tar.gz"
          chmod +x substreams
          sudo mv substreams /usr/local/bin/
          
          # Verify installation
          substreams --version
      
      - name: Run Python script with real data
        env:
          SUBSTREAMS_API_KEY: ${{ secrets.SUBSTREAMS_API_KEY }}
        run: |
          # Run the Python script to generate real data
          python process_contracts.py
          
          # Check if real data was generated
          if [ -f "results/latest_analysis.json" ]; then
            echo "Successfully generated real data!"
            cat results/latest_analysis.json | head -20
          else
            echo "Failed to generate real data!"
            exit 1
          fi
      
      - name: Deploy to GitHub Pages
        run: |
          # Create a new branch for GitHub Pages
          git checkout -b gh-pages
          
          # Save the analysis file before cleaning
          mkdir -p /tmp/results
          cp results/latest_analysis.json /tmp/results/
          
          # Remove everything except the dashboard directory
          find . -mindepth 1 -maxdepth 1 -not -name 'dashboard' -not -name '.git' -exec rm -rf {} \;
          
          # Move dashboard files to root
          mv dashboard/* .
          rmdir dashboard
          
          # Create results directory and copy the real data
          mkdir -p results
          cp /tmp/results/latest_analysis.json results/
          
          # List files to verify
          echo "Files in current directory:"
          ls -la
          
          echo "Files in results directory:"
          ls -la results/
          
          # Create a .nojekyll file to disable Jekyll processing
          touch .nojekyll
          
          # Configure Git
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # Commit and push to gh-pages branch
          git add .
          git commit -m "Deploy dashboard to GitHub Pages"
          git push -f origin gh-pages
